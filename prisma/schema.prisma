generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  password  String
  name      String
  role      Role        @default(EXAMINEE)
  createdAt DateTime    @default(now())
  isTakingAnExam Boolean @default(false)
  Activity  Activity[]
  Class     Class[]
  Enrolment Enrolment[]
}

model Class {
  id         Int         @id @default(autoincrement())
  name       String
  courseCode String
  section    String
  createdAt  DateTime    @default(now())
  code       String      @unique
  proctorId  Int
  Proctor    User        @relation(fields: [proctorId], references: [id])
  Enrolment  Enrolment[]
  Exam       Exam[]
}

model Enrolment {
  id         Int      @id @default(autoincrement())
  userId     Int
  classId    Int
  enrolledAt DateTime @default(now())
  Class      Class    @relation(fields: [classId], references: [id])
  User       User     @relation(fields: [userId], references: [id])

  @@unique([userId, classId], name: "enrolmentIdentifier")
}

model Exam {
  id          Int        @id @default(autoincrement())
  classId     Int
  link        String
  name        String
  description String?
  status      STATUS     @default(UPCOMING)
  platform    Platform   @default(TEAMS)
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime   @default(now())
  Class       Class      @relation(fields: [classId], references: [id])
  Activity    Activity[]
}

model Activity {
  id           Int          @id @default(autoincrement())
  isSuspicious Boolean      @default(true)
  name         ActivityName
  description  String?
  examId       Int
  examineeId   Int
  createdAt    DateTime     @default(now())
  Exam         Exam         @relation(fields: [examId], references: [id])
  Examinee     User         @relation(fields: [examineeId], references: [id])
}

enum ActivityName {
  SWITCHED_TAB
  LOSE_WINDOW_FOCUS
  USED_PASTE_FUNCTION
  ACCESSED_SITE
  USED_SEARCH_ENGINE
  FINISHED_EXAM_FAST
  ENTERED_EXAM_LATE
  FINISHED_EXAM
  WENT_IDLE
  JOINED_EXAM
  RETURNED
}

enum Role {
  PROCTOR
  EXAMINEE
}

enum Platform {
  TEAMS
  GOOGLE_FORMS
  MOODLE
}

enum STATUS {
  UPCOMING
  ONGOING
  FINISHED
}
